{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/karina/Desktop/Shopify-FrontEnd-Challenge/movie4etpnrs/src/components/Search.js\";\nimport React from 'react';\nimport './Search.css';\nimport axios from 'axios';\n\nclass Search extends React.Component {\n  // define Search with its properties here\n  constructor(props) {\n    super(props);\n\n    this.renderSearchResults = () => {\n      const {\n        results\n      } = this.state;\n      console.warn(results);\n      console.warn(this.state.message);\n\n      if (results.length) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-container\",\n          children: \"helloWorld\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [results.Title, \"HelloWOrld\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.fetchSearchResult = event => {\n      const query = this.state.query;\n\n      if (query.length) {\n        const searchURL = `http://www.omdbapi.com/?apikey=7353c7c5&t=${query}`;\n        axios.get(searchURL).then(res => {\n          console.warn(res.data);\n\n          if (res.data.Title) {\n            this.setState({\n              results: {\n                title: res.data.Title,\n                yor: res.data.Released\n              },\n              message: ''\n            });\n          } else {\n            this.setState({\n              results: {},\n              message: 'Movie not found.'\n            });\n          }\n        }).catch(error => {\n          if (error) {\n            this.setState({\n              message: 'Failed to fetch data. Check your network connection.'\n            });\n          }\n        });\n      } else {\n        this.setState({\n          message: 'Movie name cannot be empty.'\n        });\n      }\n    };\n\n    this.inputOnChangeHandler = event => {\n      const query = event.target.value;\n      this.setState({\n        query: query,\n        message: ''\n      });\n    };\n\n    this.state = {\n      query: '',\n      results: {\n        title: '',\n        yor: 0\n      },\n      message: ''\n    };\n    this.movieIDs = [];\n  }\n\n  render() {\n    const {\n      query\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header\",\n          children: [\"The Shoppies:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 57\n          }, this), \"Movie Awards for Entrepreneurs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"note\",\n          children: \"Nominate your 5 favorite movies!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Search Movie by Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"search-label\",\n            htmlFor: \"search-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"query\",\n                value: query,\n                id: \"search-input\",\n                placeholder: \"Movie Title (e.g. Titanic)\",\n                onChange: this.inputOnChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.fetchSearchResult,\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), this.renderSearchResults()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/karina/Desktop/Shopify-FrontEnd-Challenge/movie4etpnrs/src/components/Search.js"],"names":["React","axios","Search","Component","constructor","props","renderSearchResults","results","state","console","warn","message","length","Title","fetchSearchResult","event","query","searchURL","get","then","res","data","setState","title","yor","Released","catch","error","inputOnChangeHandler","target","value","movieIDs","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Search.css';\nimport axios from 'axios';\n\nclass Search extends React.Component {\n\n    // define Search with its properties here\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            query: '',\n            results: {\n                title: '',\n                yor: 0\n            },\n            message: ''\n        }\n\n        this.movieIDs = [];\n    }\n\n    renderSearchResults = () => {\n        const { results } = this.state;\n        console.warn(results);\n        console.warn(this.state.message);\n        if (results.length) {\n            return (\n                <div className=\"result-container\">\n                    helloWorld\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"result-container\">\n                    <p>{results.Title}HelloWOrld</p>\n                </div>\n            )\n        }\n    }\n\n    fetchSearchResult = ( event ) => {\n        const query = this.state.query;\n        if ( query.length ) {\n            const searchURL = `http://www.omdbapi.com/?apikey=7353c7c5&t=${ query }`;\n            axios.get( searchURL )\n                .then( res => {\n                    console.warn(res.data);\n                    if ( res.data.Title ) {\n                        this.setState( {\n                            results: {\n                                title: res.data.Title,\n                                yor: res.data.Released\n                            },\n                            message: ''\n                        });\n                    }\n                    else {\n                        this.setState( {\n                            results: {},\n                            message: 'Movie not found.'\n                        });\n                    }\n                })\n                .catch( error => {\n                    if ( error ) {\n                        this.setState( {\n                            message: 'Failed to fetch data. Check your network connection.'\n                        });\n                    } \n                })\n        }\n        else {\n            this.setState( {\n                message: 'Movie name cannot be empty.'\n            });\n        }\n    }\n\n    inputOnChangeHandler = ( event ) => {\n        const query = event.target.value;\n        this.setState({\n            query: query,\n            message: ''\n        });\n    }\n\n    render() {\n        const { query } = this.state;\n        return (\n            <div className=\"page-container\">\n                <div className=\"header-container\">\n                    <h1 className=\"header\">The Shoppies:<br></br>Movie Awards for Entrepreneurs</h1>\n                    <h2 className=\"note\">Nominate your 5 favorite movies!</h2>\n                </div>\n                <div className=\"search-container\">\n                    <div className=\"label-container\">\n                        <p className=\"title\">Search Movie by Title</p>\n                        <label className=\"search-label\" htmlFor=\"search-input\">\n                            <i className=\"fas fa-search icon\"></i>\n                            <span>\n                                <input\n                                type=\"text\"\n                                name=\"query\"\n                                value={query}\n                                id=\"search-input\"\n                                placeholder=\"Movie Title (e.g. Titanic)\"\n                                onChange={ this.inputOnChangeHandler }\n                                />\n                            </span>\n                            <span>\n                                <button onClick={ this.fetchSearchResult }>Search</button>\n                            </span>\n                        </label>\n                    </div>\n                </div>\n                {/* Result */}\n                    {this.renderSearchResults()}\n            </div>\n        )\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}