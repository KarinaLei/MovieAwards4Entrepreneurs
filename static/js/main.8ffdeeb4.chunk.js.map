{"version":3,"sources":["components/NominateBut.js","components/RemoveBut.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["NominateBut","props","onClick","event","imdbID","state","title","yor","action","nominees","bind","disabled","this","has","className","React","Component","RemoveBut","Search","renderBanner","size","css","bannerCss","visibleTime","renderNominees","keys","Array","from","values","map","key","value","remove","renderSearchResults","results","lastQuery","message","length","Object","result","Title","Year","toggleSearch","active","delete","setState","data","set","fetchSearchResult","query","searchURL","axios","get","then","res","catch","error","inputOnChangeHandler","target","Map","color","backgroundColor","position","top","width","height","id","htmlFor","type","name","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VA+BeA,G,wDA3BX,WAAaC,GAAS,IAAD,8BACjB,cAAOA,IAWXC,QAAU,SAAEC,GAAY,IACZC,EAAW,EAAKC,MAAhBD,OACAE,EAAU,EAAKD,MAAfC,MACAC,EAAQ,EAAKF,MAAbE,IACR,EAAKF,MAAMG,OAAQJ,EAAQE,EAAOC,IAdlC,EAAKF,MAAQ,CACTG,OAAQ,EAAKP,MAAMO,OACnBC,SAAU,EAAKR,MAAMQ,SACrBL,OAAQ,EAAKH,MAAMG,OACnBE,MAAO,EAAKL,MAAMK,MAClBC,IAAK,EAAKN,MAAMM,KAEpB,EAAKF,MAAMG,OAAS,EAAKH,MAAMG,OAAOE,KAAlB,gBATH,E,qDAqBjB,OACI,wBAAQC,SAAWC,KAAKP,MAAMI,SAASI,IAAID,KAAKX,MAAMG,QAAUU,UAAWF,KAAKP,MAAMI,SAASI,IAAID,KAAKX,MAAMG,QAAU,kBAAoB,gBAAiBF,QAAUU,KAAKV,QAA5K,4B,GAvBca,IAAMC,YCwBjBC,E,kDAvBX,WAAahB,GAAS,IAAD,8BACjB,cAAOA,IAUXC,QAAU,SAAEC,GACR,IAAMC,EAAS,EAAKH,MAAMG,OAC1B,EAAKC,MAAMG,OAAQJ,IAXnB,EAAKC,MAAQ,CACTG,OAAQ,EAAKP,MAAMO,OACnBJ,OAAQ,EAAKH,MAAMG,OACnBE,MAAO,EAAKL,MAAMK,MAClBC,IAAK,EAAKN,MAAMM,KAEpB,EAAKF,MAAMG,OAAS,EAAKH,MAAMG,OAAOE,KAAlB,gBARH,E,qDAiBjB,OACI,wBAAQI,UAAU,SAASZ,QAAUU,KAAKV,QAA1C,0B,GAnBYa,IAAMC,W,iBCwRfE,E,kDAlRX,WAAajB,GAAS,IAAD,8BACjB,cAAOA,IAoBXkB,aAAe,WAEX,GADiB,EAAKd,MAAMI,SACfW,MAAQ,EACjB,OACI,cAAC,IAAD,CACId,MAAM,mEACNe,IAAM,EAAKC,UACXC,YAAc,OA5BT,EAkCrBC,eAAiB,WACb,IAAMf,EAAW,EAAKJ,MAAMI,SACtBgB,EAAOC,MAAMC,KAAMlB,EAASgB,QAC5BG,EAASF,MAAMC,KAAMlB,EAASmB,UACpC,OAAKnB,EAASW,KAEN,sBAAKN,UAAU,oBAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,4CAEJ,sBAAsBA,UAAU,aAAhC,UACI,sBAAMA,UAAU,qBAAhB,mBACA,sBAAMA,UAAU,4BAAhB,8BACA,sBAAMA,UAAU,sBAAhB,sBAHK,cAKT,uBACA,qBAAKA,UAAU,UAAf,SACac,EAAQC,KAAK,SAACC,EAAKC,GACxB,OACI,sBAAyBjB,UAAU,aAAnC,UACI,sBAAMA,UAAU,oBAAhB,SAAsCgB,EAAIxB,QAC1C,sBAAMQ,UAAU,qBAAhB,SAAuCgB,EAAIvB,MAC3C,cAAC,EAAD,CACYC,OAAW,EAAKwB,OAChB5B,OAAWqB,EAAKM,GAChBzB,MAAUwB,EAAIxB,MACdC,IAAQuB,EAAIvB,QAPjBkB,EAAKM,YAiBhC,sBAAKjB,UAAU,oBAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,4CAEJ,sBAAsBA,UAAU,aAAhC,UACY,sBAAMA,UAAU,qBAAhB,mBACA,sBAAMA,UAAU,4BAAhB,8BACA,sBAAMA,UAAU,sBAAhB,sBAHH,cAKT,qBAAKA,UAAU,gBA/EV,EAsFrBmB,oBAAsB,WAAO,IACjBC,EAAY,EAAK7B,MAAjB6B,QACAC,EAAc,EAAK9B,MAAnB8B,UACR,OAAM,EAAK9B,MAAM+B,QAAQC,QAAUC,OAAOb,KAAMS,IAAaA,EAAQG,OAE7D,sBAAKvB,UAAU,mBAAf,UACI,qBAAKA,UAAU,iCAAf,SACI,qBAAIA,UAAU,MAAd,UAAsBoB,EAAQG,OAA9B,iBAAsDF,EAAtD,SAEJ,sBAAKrB,UAAU,SAAf,UACI,sBAAsBA,UAAU,aAAhC,UACI,sBAAMA,UAAU,qBAAhB,mBACA,sBAAMA,UAAU,uBAAhB,8BACA,sBAAMA,UAAU,sBAAhB,sBAHK,cAKT,uBACEoB,EAAQL,KAAK,SAAAU,GACX,OACI,sBAA2BzB,UAAU,aAArC,UACI,sBAAMA,UAAU,oBAAhB,SAAsCyB,EAAOC,QAC7C,sBAAM1B,UAAU,qBAAhB,SAAuCyB,EAAOE,OAC9C,cAAC,EAAD,CACYjC,OAAW,EAAKkC,aAChBjC,SAAa,EAAKJ,MAAMI,SACxBL,OAAWmC,EAAOnC,OAClBE,MAAUiC,EAAOC,MACjBjC,IAAQgC,EAAOE,KACfE,QAAS,EAAKtC,MAAMI,SAASI,IAAI0B,EAAOnC,YAT7CmC,EAAOnC,iBAkB/B,EAAKC,MAAM+B,QAAQC,OAgBlB,sBAAKvB,UAAU,mBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,oBAAIA,UAAU,MAAd,6BAEJ,sBAAsBA,UAAU,aAAhC,UACI,sBAAMA,UAAU,qBAAhB,mBACA,sBAAMA,UAAU,uBAAhB,8BACA,sBAAMA,UAAU,sBAAhB,sBAHK,cAKT,oBAAIA,UAAU,UAAd,SAA0B,EAAKT,MAAM+B,aAvBzC,sBAAKtB,UAAU,mBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,oBAAIA,UAAU,MAAd,6BAEJ,sBAAsBA,UAAU,aAAhC,UACI,sBAAMA,UAAU,qBAAhB,mBACA,sBAAMA,UAAU,uBAAhB,8BACA,sBAAMA,UAAU,sBAAhB,sBAHK,kBAhIR,EA0JrB4B,aAAe,SAAEtC,EAAQE,EAAOC,GAC5B,GAAK,EAAKF,MAAMI,SAASI,IAAIT,GACzB,EAAKC,MAAMI,SAASmC,OAAOxC,GAC3B,EAAKyC,SAAU,CACXpC,SAAU,EAAKJ,MAAMI,gBAIzB,GAAK,EAAKJ,MAAMI,SAASW,KAAO,EAAI,CAChC,IAAM0B,EAAO,CAAExC,MAAOA,EAAOC,IAAKA,GAClC,EAAKF,MAAMI,SAASsC,IAAI3C,EAAQ0C,GAChC,EAAKD,SAAU,CACXpC,SAAU,EAAKJ,MAAMI,aAtKhB,EA4KrBuB,OAAS,SAAE5B,GACF,EAAKC,MAAMI,SAASI,IAAIT,KACzB,EAAKC,MAAMI,SAASmC,OAAOxC,GAC3B,EAAKyC,SAAU,CACXpC,SAAU,EAAKJ,MAAMI,aAhLZ,EAqLrBuC,kBAAoB,WAChB,IAAMC,EAAQ,EAAK5C,MAAM4C,MAIzB,GAHA,EAAKJ,SAAU,CACXV,UAAWc,IAEVA,EAAMZ,OAAS,CAChB,IAAMa,EAAS,qDAAkDD,GACjEE,IAAMC,IAAKF,GACNG,MAAM,SAAAC,GACEA,EAAIR,KAAK5B,OACV,EAAK2B,SAAU,CACXX,QAASoB,EAAIR,KAAK5B,OAClBkB,QAAS,KAIb,EAAKS,SAAU,CACXX,QAAS,GACTE,QAAS,wBAIpBmB,OAAO,SAAAC,GACCA,GACD,EAAKX,SAAU,CACXX,QAAS,GACTE,QAAS,iEAMzB,EAAKS,SAAU,CACXX,QAAS,GACTE,QAAS,iCAvNA,EA4NrBqB,qBAAuB,SAAEtD,GACrB,IAAM8C,EAAQ9C,EAAMuD,OAAO3B,MAC3B,EAAKc,SAAS,CACVI,MAAOA,EACPb,QAAS,MA7Nb,EAAK/B,MAAQ,CACT4C,MAAO,GACPd,UAAW,GACXD,QAAS,GACTE,QAAS,GACT3B,SAAU,IAAIkD,KAGlB,EAAKrC,UAAY,CACbsC,MAAO,UACPC,gBAAiB,QACjBC,SAAU,QACVC,IAAK,IACLC,MAAO,OACPC,OAAQ,QAjBK,E,qDAoOX,IACEhB,EAAUrC,KAAKP,MAAf4C,MACR,OACI,sBAAKnC,UAAU,iBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,qBAAIA,UAAU,SAAd,UAAuB,sBAAMoD,GAAG,YAAT,2BAAyC,uBAAK,uBAAK,sBAAMA,GAAG,YAAT,+CAC1E,oBAAIpD,UAAU,OAAd,qDAEJ,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,QAAb,mCACA,wBAAOA,UAAU,eAAeqD,QAAQ,eAAxC,UACI,mBAAGrD,UAAU,uBACb,+BACI,uBACAsD,KAAK,OACLC,KAAK,QACLtC,MAAOkB,EACPiB,GAAG,eACHI,YAAY,6BACZC,SAAW3D,KAAK6C,yBAGpB,+BACI,wBAAQvD,QAAUU,KAAKoC,kBAAoBlC,UAAU,SAASoD,GAAG,SAAjE,8BAMhB,sBAAKpD,UAAU,yBAAf,UACI,sBAAMA,UAAU,gBAAhB,SACCF,KAAKqB,wBAGN,sBAAMnB,UAAU,iBAAhB,SACCF,KAAKY,sBAITZ,KAAKO,sB,GA9QDJ,IAAMC,W,MCKZwD,MARf,WACE,OACE,qBAAK1D,UAAU,MAAf,SACE,cAAC,EAAD,OCKS2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8ffdeeb4.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nclass NominateBut extends React.Component {\n    constructor( props ) {\n        super( props );\n        this.state = {\n            action: this.props.action,\n            nominees: this.props.nominees,\n            imdbID: this.props.imdbID,\n            title: this.props.title,\n            yor: this.props.yor,\n        };\n        this.state.action = this.state.action.bind(this);\n    }\n\n    onClick = ( event ) => {\n        const { imdbID } = this.state;\n        const { title } = this.state;\n        const { yor } = this.state;\n        this.state.action( imdbID, title, yor );\n    }\n\n\n    render() {\n        return (\n            <button disabled={ this.state.nominees.has(this.props.imdbID) } className={this.state.nominees.has(this.props.imdbID) ? 'inactive button' : 'active button'} onClick={ this.onClick }> Nominate </button>\n        )\n    }\n}\n\nexport default NominateBut;","import React from 'react';\nimport './Button.css';\n\nclass RemoveBut extends React.Component {\n    constructor( props ) {\n        super( props );\n        this.state = {\n            action: this.props.action,\n            imdbID: this.props.imdbID,\n            title: this.props.title,\n            yor: this.props.yor,\n        };\n        this.state.action = this.state.action.bind(this);\n    }\n\n    onClick = ( event ) => {\n        const imdbID = this.props.imdbID;\n        this.state.action( imdbID );\n    }\n\n    render() {\n        return (\n            <button className=\"button\" onClick={ this.onClick }> Remove </button>\n        )\n    }\n}\n\nexport default RemoveBut;","import React from 'react';\nimport './Search.css';\nimport axios from 'axios';\nimport NominateBut from './NominateBut';\nimport RemoveBut from './RemoveBut';\nimport Banner from 'react-js-banner';\n\nclass Search extends React.Component {\n\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            query: '',\n            lastQuery: '',\n            results: {},\n            message: '',\n            nominees: new Map()\n        }\n\n        this.bannerCss = {\n            color: '#42474c', \n            backgroundColor: 'white', \n            position: 'fixed', \n            top: '0',\n            width: '100%',\n            height: '32px'\n        }\n    }\n\n    renderBanner = () => {\n        const nominees = this.state.nominees;\n        if (nominees.size >= 5) {\n            return (\n                <Banner\n                    title=\"Congratulations! You've selected your top 5 movies! ðŸŽ¥\"\n                    css={ this.bannerCss }\n                    visibleTime={ 3000 }\n                />\n            )\n        }\n    }\n\n    renderNominees = () => {\n        const nominees = this.state.nominees;\n        const keys = Array.from( nominees.keys() );\n        const values = Array.from( nominees.values() );\n        if ( nominees.size ) {\n            return (\n                <div className=\"nominee-container\">\n                    <div className=\"header-container nominee-header\">\n                        <h1>Nominees</h1>\n                    </div>\n                    <div key=\"row-header\" className=\"row-header\">\n                        <span className=\"result-header left\">Title</span>\n                        <span className=\"result-header middleRight\">Year of Released</span>\n                        <span className=\"result-header right\">Action</span>\n                    </div>\n                    <hr/>\n                    <div className=\"nominee\">\n                        { (keys, values).map( (key, value) => {\n                            return (\n                                <div key={ keys[value] } className=\"result-row\">\n                                    <span className=\"result-title left\">{ key.title }</span>\n                                    <span className=\"result-year middle\">{ key.yor }</span>\n                                    <RemoveBut \n                                                action = { this.remove }\n                                                imdbID = { keys[value] }\n                                                title = { key.title }\n                                                yor = { key.yor }/>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"nominee-container\">\n                    <div className=\"header-container nominee-header\">\n                        <h1>Nominees</h1>\n                    </div>\n                    <div key=\"row-header\" className=\"row-header\">\n                                <span className=\"result-header left\">Title</span>\n                                <span className=\"result-header middleRight\">Year of Released</span>\n                                <span className=\"result-header right\">Action</span>\n                    </div>\n                    <div className=\"nominee\">\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    renderSearchResults = () => {\n        const { results } = this.state;\n        const { lastQuery } = this.state;\n        if ( !this.state.message.length && Object.keys( results ) && results.length ) {\n            return (\n                <div className=\"result-container\">\n                    <div className=\"header-container result-header\">\n                        <h1 className=\"msg\">{ results.length } results for \"{ lastQuery }\"</h1>\n                    </div>\n                    <div className=\"result\">\n                        <div key=\"row-header\" className=\"row-header\">\n                            <span className=\"result-header left\">Title</span>\n                            <span className=\"result-header middle\">Year of Released</span>\n                            <span className=\"result-header right\">Action</span>\n                        </div>\n                        <hr/>\n                        { results.map( result => {\n                            return (\n                                <div key={ result.imdbID } className=\"result-row\">\n                                    <span className=\"result-title left\">{ result.Title }</span>\n                                    <span className=\"result-year middle\">{ result.Year }</span>\n                                    <NominateBut\n                                                action = { this.toggleSearch } \n                                                nominees = { this.state.nominees }\n                                                imdbID = { result.imdbID } \n                                                title = { result.Title }\n                                                yor = { result.Year }\n                                                active={ this.state.nominees.has(result.imdbID) ? false : true }/>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            )\n        }\n        else {\n            if ( ! this.state.message.length ) {\n                return (\n                    <div className=\"result-container\">\n                        <div className=\"header-container\">\n                            <h1 className=\"msg\">Search Result</h1>\n                        </div>\n                        <div key=\"row-header\" className=\"row-header\">\n                            <span className=\"result-header left\">Title</span>\n                            <span className=\"result-header middle\">Year of Released</span>\n                            <span className=\"result-header right\">Action</span>\n                        </div>\n                    </div>\n                )\n            }\n            else {\n                return (\n                    <div className=\"result-container\">\n                        <div className=\"header-container\">\n                            <h1 className=\"msg\">Search Result</h1>\n                        </div>\n                        <div key=\"row-header\" className=\"row-header\">\n                            <span className=\"result-header left\">Title</span>\n                            <span className=\"result-header middle\">Year of Released</span>\n                            <span className=\"result-header right\">Action</span>\n                        </div>\n                        <h1 className=\"msg red\">{ this.state.message }</h1>\n                    </div>\n                )\n            }\n        }\n    }\n\n    toggleSearch = ( imdbID, title, yor ) => {\n        if ( this.state.nominees.has(imdbID) ) {\n            this.state.nominees.delete(imdbID);\n            this.setState( {\n                nominees: this.state.nominees\n            })\n        }\n        else {\n            if ( this.state.nominees.size < 5 ) {\n                const data = { title: title, yor: yor };\n                this.state.nominees.set(imdbID, data);\n                this.setState( {\n                    nominees: this.state.nominees\n                })\n            }\n        }\n    }\n\n    remove = ( imdbID ) => {\n        if ( this.state.nominees.has(imdbID) ) {\n            this.state.nominees.delete(imdbID);\n            this.setState( {\n                nominees: this.state.nominees\n            })\n        }\n    }\n\n    fetchSearchResult = (  ) => {\n        const query = this.state.query;\n        this.setState( {\n            lastQuery: query\n        });\n        if ( query.length ) {\n            const searchURL = `https://www.omdbapi.com/?apikey=7353c7c5&s=${ query }`;\n            axios.get( searchURL )\n                .then( res => {\n                    if ( res.data.Search ) {\n                        this.setState( {\n                            results: res.data.Search,\n                            message: ''\n                        });\n                    }\n                    else {\n                        this.setState( {\n                            results: {},\n                            message: 'Movie not found.'\n                        });\n                    }\n                })\n                .catch( error => {\n                    if ( error ) {\n                        this.setState( {\n                            results: {},\n                            message: 'Failed to fetch data. Check your network connection.'\n                        });\n                    } \n                })\n        }\n        else {\n            this.setState( {\n                results: {},\n                message: 'Movie name cannot be empty.'\n            });\n        }\n    }\n\n    inputOnChangeHandler = ( event ) => {\n        const query = event.target.value;\n        this.setState({\n            query: query,\n            message: ''\n        });\n    }\n\n    render() {\n        const { query } = this.state;\n        return (\n            <div className=\"page-container\">\n                <div className=\"header-container\">\n                    <h1 className=\"header\"><span id=\"shoppies1\">The Shoppies:</span><br/><br/><span id=\"shoppies2\">Movie Awards for Entrepreneurs</span></h1>\n                    <h2 className=\"note\">Nominate Your Top 5 Favorite Movies!</h2>\n                </div>\n                <div className=\"search-container\">\n                    <div className=\"label-container\">\n                        <p className=\"title\">Search Movie by Title</p>\n                        <label className=\"search-label\" htmlFor=\"search-input\">\n                            <i className=\"fas fa-search icon\"></i>\n                            <span>\n                                <input\n                                type=\"text\"\n                                name=\"query\"\n                                value={query}\n                                id=\"search-input\"\n                                placeholder=\"Movie Title (e.g. Titanic)\"\n                                onChange={ this.inputOnChangeHandler }\n                                />\n                            </span>\n                            <span>\n                                <button onClick={ this.fetchSearchResult } className=\"button\" id=\"search\">Search</button>\n                            </span>\n                        </label>\n                    </div>\n                </div>\n                {/* Result */}\n                <div className=\"search-nominee-results\">\n                    <span className=\"search-result\">\n                    {this.renderSearchResults()}\n                    </span>\n                    {/* Nominees */}\n                    <span className=\"nominee-result\">\n                    {this.renderNominees()}\n                    </span>\n                </div>\n                {/* Banner */}\n                {this.renderBanner()}\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport Search from './components/Search';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);  \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}